name: Automated builds

on: [push]

defaults:
  run:
    shell: bash

env:
  BUILD_TYPE: Release

jobs:
  create-source-archive:
    runs-on: ubuntu-20.04

    outputs:
        artifact-name: ${{ env.ARCHIVE_NAME }}

    steps:
    - uses: actions/checkout@v2
      with:
        path: aether
        submodules: recursive

    - name: Set Archive Name
      run: echo "ARCHIVE_NAME=aether-source-code" >> "$GITHUB_ENV"

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARCHIVE_NAME }}
        path: aether/

  build-macos:
    runs-on: macos-latest

    outputs:
        artifact-name: ${{ env.ARCHIVE_NAME }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set Archive Name
      run: echo "ARCHIVE_NAME=aether-macos" >> "$GITHUB_ENV"

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Build Plugin
      working-directory: ${{github.workspace}}/build
      env:
        CXX: clang++
      run: |
        cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS="on"
        cmake --build . --config $BUILD_TYPE -j3

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C $BUILD_TYPE

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARCHIVE_NAME }}
        path: ${{github.workspace}}/build/aether.lv2

  build-ubuntu:
    runs-on: ubuntu-20.04

    outputs:
        artifact-name: ${{ env.ARCHIVE_NAME }}

    strategy:
      matrix:
        config:
          - { compiler: GNU,  CC: gcc-10,   CXX: g++-10 }
          - { compiler: LLVM, CC: clang-10, CXX: clang++-10 }
          
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Update APT Lists
      run: sudo apt-get update
      
    - name: Install Dependencies
      run: sudo apt-get install libgl1-mesa-dev libglu1-mesa-dev sordi

    - name: Set Archive Name
      run: echo "ARCHIVE_NAME=aether-linux-${{ matrix.config.compiler }}" >> "$GITHUB_ENV"

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Build Plugin
      working-directory: ${{github.workspace}}/build
      env:
        CC: ${{ matrix.config.CC }}
        CXX: ${{ matrix.config.CXX }}
      run: |
        cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS="on"
        cmake --build . --config $BUILD_TYPE -j2

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C $BUILD_TYPE

    - name: Validate ttl
      run: sord_validate $(find extern/lv2 -name '*.ttl') $(find build/aether.lv2 -name '*.ttl')

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARCHIVE_NAME }}
        path: ${{github.workspace}}/build/aether.lv2

  build-windows:
    runs-on: windows-2019

    outputs:
        artifact-name: ${{ env.ARCHIVE_NAME }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set Archive Name
      run: echo "ARCHIVE_NAME=aether-windows.zip" >> "$GITHUB_ENV"

    - name: Build Plugin
      shell: bash
      run: |
        mkdir build
        cd build
        cmake -G "Visual Studio 16 2019" ..
        cmake --build . --config=release -j2

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARCHIVE_NAME }}
        path: ${{github.workspace}}/build/aether.lv2
